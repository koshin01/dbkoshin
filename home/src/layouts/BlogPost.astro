---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.tsx";
import Body from "../components/Body.tsx";
import Footer from "../components/Footer.tsx";
import FormattedDate from "../components/FormattedDate.tsx";
import Header from "../components/Header.astro";
import Main from "../components/Main.tsx";
import { SITE_FAVICON_IMAGE, SITE_OG_IMAGE } from "../consts";

const blogHome = {
	name: "Blog",
	url: "/blog",
};

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead 
			title={title} 
			description={description}
			faviconImage={SITE_FAVICON_IMAGE}
			ogImage={SITE_OG_IMAGE}
			canonicalURL={new URL(Astro.url.pathname, Astro.site).toString()}
			generatorName={Astro.generator}
		/>
	</head>
	<Body>
		<Header subHome={blogHome}/>
		<Main>
			<article class="lg:w-8/12 lg:mx-auto">
				<div>
					{heroImage && <img src={heroImage.src} alt={heroImage.alt} class="w-full rounded-md" />}
				</div>
				<div>
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</Main>
		<Footer />
	</Body>
</html>
